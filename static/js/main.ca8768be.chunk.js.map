{"version":3,"sources":["components/Checkbox.jsx","components/Uregent.jsx","components/Close.jsx","components/TodoList.jsx","components/Input.jsx","components/NewTodo.jsx","components/RadioState.jsx","components/States.jsx","App.jsx","index.js"],"names":["Checkbox","defaultChecked","id","onChange","className","disabled","type","name","trim","Uregent","isUrgent","htmlFor","Close","onClick","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","TodoList","todoList","updateStatus","activeTodos","filter","todo","completed","Error","getTodos","map","itemID","flag","title","Input","placeholder","autoComplete","TodoInput","addTodos","onSubmit","e","preventDefault","target","elements","value","length","nanoid","checked","RadioState","readOnly","States","activeState","setActiveState","allStates","state","STORAGE_KEY","STATES","App","useState","window","localStorage","getItem","JSON","parse","todos","setTodos","setActiveTodos","useEffect","setItem","stringify","newTodo","todoID","forChange","find","idx","findIndex","splice","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ca8768be.chunk.js","sourcesContent":["import PropTypes from \"prop-types\";\nimport \"./Checkbox.scss\";\nfunction Checkbox({\n  defaultChecked = false,\n  id,\n  onChange = () => {},\n  className = \"\",\n  disabled = false,\n}) {\n  return (\n    <input\n      type=\"checkbox\"\n      name=\"urgent\"\n      id={id}\n      onChange={onChange}\n      defaultChecked={defaultChecked}\n      className={`Checkbox ${className}`.trim()}\n      disabled={disabled}\n    />\n  );\n}\nCheckbox.propTypes = {\n  id: PropTypes.string.isRequired,\n};\nexport default Checkbox;\n","import PropTypes from \"prop-types\";\nimport Checkbox from \"./Checkbox\";\nimport \"./Uregent.scss\";\nfunction Uregent({\n  isUrgent = false,\n  onChange = () => {},\n  disabled,\n  className = \"\",\n  id,\n}) {\n  return (\n    <p className={`Uregent ${className}`.trim()} onChange={onChange}>\n      <label htmlFor={id} className=\"Uregent__label\">\n        Uregent\n      </label>\n      <Checkbox id={id} disabled={disabled} defaultChecked={isUrgent} />\n    </p>\n  );\n}\nUregent.propTypes = {\n  id: PropTypes.string.isRequired,\n};\nexport default Uregent;\n","import \"./Close.scss\";\nfunction Close({ onClick = () => {}, className = \"\" }) {\n  return (\n    <button className={`Close ${className}`.trim()} onClick={onClick}>\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        fill=\"none\"\n        viewBox=\"0 0 24 24\"\n        stroke=\"currentColor\"\n      >\n        <path\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          strokeWidth={2}\n          d=\"M6 18L18 6M6 6l12 12\"\n        />\n      </svg>\n    </button>\n  );\n}\n\nexport default Close;\n","import Checkbox from \"./Checkbox\";\nimport Uregent from \"./Uregent\";\nimport Close from \"./Close\";\nimport \"./TodoList.scss\";\n\nfunction TodoList({ todoList, updateStatus, activeTodos }) {\n  function getTodos() {\n    switch (activeTodos) {\n      case \"All\":\n        return todoList;\n      case \"Active\":\n        return todoList.filter((todo) => !todo.completed);\n      case \"Completed\":\n        return todoList.filter((todo) => !!todo.completed);\n      case \"Urgent\":\n        return todoList.filter((todo) => todo.isUrgent);\n      default:\n        throw Error(\"Wrong status\");\n    }\n  }\n  function handleUregentChange(itemID) {\n    updateStatus({ itemID, flag: \"uregent\" });\n  }\n  function handleDelete(itemID) {\n    updateStatus({ itemID, flag: \"delete\" });\n  }\n  function handleCompleteChange(itemID) {\n    updateStatus({ itemID, flag: \"complete\" });\n  }\n  return (\n    <section className=\"TodoList\">\n      <ul className=\"TodoList__list\">\n        {getTodos().map((todo) => {\n          return (\n            <li key={todo.id} className=\"TodoList__list__todo\">\n              <p className=\"TodoList__list__todo__text\">\n                <Checkbox\n                  id={`complete${todo.id}`}\n                  onChange={() => handleCompleteChange(todo.id)}\n                  defaultChecked={todo.completed}\n                />\n                <span\n                  className={`TodoList__list__todo__text__title ${\n                    todo.completed\n                      ? \"TodoList__list__todo__text__title--completed\"\n                      : \"\"\n                  }`}\n                >\n                  {todo.title}\n                </span>\n              </p>\n              <div className=\"TodoList__list__todo__action\">\n                <Uregent\n                  id={`uregent${todo.id}`}\n                  isUrgent={todo.isUrgent}\n                  onChange={() => handleUregentChange(todo.id)}\n                  disabled={todo.completed}\n                  className={`TodoList__list__todo__action__uregent ${\n                    todo.completed\n                      ? \"TodoList__list__todo__action__uregent--disabled\"\n                      : \"\"\n                  }`}\n                />\n                <Close\n                  className=\"TodoList__list__todo__action__close\"\n                  onClick={() => handleDelete(todo.id)}\n                />\n              </div>\n            </li>\n          );\n        })}\n      </ul>\n    </section>\n  );\n}\n\nexport default TodoList;\n","import \"./Input.scss\";\nfunction Input({ placeholder = \"Whats needs to be done?\" }) {\n  return (\n    <p className=\"Input\">\n      <label htmlFor=\"new-todo\" className=\"Input__label\">\n        New todo\n      </label>\n      <input\n        id=\"new-todo\"\n        name=\"new-todo\"\n        type=\"text\"\n        className=\"Input__input\"\n        autoComplete=\"off\"\n        placeholder={placeholder}\n      />\n    </p>\n  );\n}\n\nexport default Input;\n","import \"./NewTodo.scss\";\nimport Input from \"./Input\";\n\nimport { nanoid } from \"nanoid\";\nimport Uregent from \"./Uregent\";\n\nfunction TodoInput({ addTodos }) {\n  function handleAddNew(e) {\n    e.preventDefault();\n\n    // <input id = \"new-todo>\"\n    // <checkbox id = \"urgent>\"\n    var title = e.target.elements[\"new-todo\"];\n    var isUrgent = e.target.elements[\"urgent\"];\n    if (title.value.trim().length == 0) {\n      return;\n    }\n\n    addTodos({\n      id: nanoid(),\n      title: title.value,\n      isUrgent: isUrgent.checked,\n      completed: false,\n    });\n    title.value = \"\";\n    isUrgent.checked = false;\n  }\n  return (\n    <form onSubmit={handleAddNew} className=\"NewTodo\">\n      <Input />\n      <Uregent id=\"todo-input\" />\n    </form>\n  );\n}\n\nexport default TodoInput;\n","import \"./RadioState.scss\";\nfunction RadioState({ value, checked }) {\n  return (\n    <p className=\"RadioState\">\n      <input\n        className=\"RadioState__input\"\n        type=\"radio\"\n        id={value}\n        value={value}\n        name={value}\n        readOnly\n        checked={checked}\n      />\n      <label className=\"RadioState__label\" htmlFor={value}>\n        {value}\n      </label>\n    </p>\n  );\n}\n\nexport default RadioState;\n","import RadioState from \"./RadioState\";\nimport \"./States.scss\";\n\nfunction States({ activeState, setActiveState, allStates }) {\n  function handleChangeStatus(e) {\n    setActiveState(e.target.value);\n  }\n  return (\n    <div className=\"States\" onChange={handleChangeStatus}>\n      {allStates.map((state) => {\n        return (\n          <RadioState\n            key={state}\n            value={state}\n            checked={state == activeState}\n          ></RadioState>\n        );\n      })}\n    </div>\n  );\n}\n\nexport default States;\n","import { useState, useEffect } from \"react\";\nimport \"./App.scss\";\nimport TodoList from \"./components/TodoList\";\nimport NewTodo from \"./components/NewTodo\";\nimport States from \"./components/States\";\nconst STORAGE_KEY = \"mvc-todo_react\";\nconst STATES = [\"All\", \"Active\", \"Completed\", \"Urgent\"];\nfunction App() {\n  const [todos, setTodos] = useState(() => {\n    if (window.localStorage.getItem(STORAGE_KEY)) {\n      return JSON.parse(window.localStorage.getItem(STORAGE_KEY));\n    } else {\n      return [];\n    }\n  });\n  const [activeTodos, setActiveTodos] = useState(\"All\");\n  useEffect(() => {\n    window.localStorage.setItem(STORAGE_KEY, JSON.stringify(todos));\n  }, [todos]);\n\n  function addNewTodo(newTodo) {\n    setTodos([...todos, newTodo]);\n  }\n  function updateStatus(todo) {\n    var todoID = todo.itemID;\n    if (todo.flag == \"uregent\" || todo.flag == \"complete\") {\n      let forChange = todos.find((todo) => todo.id == todoID);\n      if (forChange == null) {\n        return;\n      } else if (todo.flag == \"uregent\") {\n        forChange.isUrgent = !forChange.isUrgent;\n      } else {\n        forChange.completed = !forChange.completed;\n      }\n      setTodos([...todos]);\n    } else if (todo.flag == \"delete\") {\n      let idx = todos.findIndex((todo) => todo.id == todoID);\n      if (idx == -1) {\n        return;\n      }\n      todos.splice(idx, 1);\n      setTodos([...todos]);\n    }\n  }\n  return (\n    <div className=\"App\">\n      <h1 className=\"App__title\">todos</h1>\n      <main className=\"App__main\">\n        <NewTodo addTodos={addNewTodo} />\n        <TodoList\n          todoList={todos}\n          activeTodos={activeTodos}\n          updateStatus={updateStatus}\n        />\n      </main>\n      <footer className=\"App__footer\">\n        {todos.length > 0 && (\n          <States\n            activeState={activeTodos}\n            setActiveState={setActiveTodos}\n            allStates={STATES}\n          />\n        )}\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App.jsx\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}